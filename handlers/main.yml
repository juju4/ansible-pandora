---

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes
  become: yes
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

- name: Restart pandora-kvrocks
  ansible.builtin.service:
    name: pandora-kvrocks
    state: restarted
  become: yes
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

- name: Restart pandora-redis
  ansible.builtin.service:
    name: pandora-redis
    state: restarted
  become: yes
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

- name: Restart pandora-unoserver
  ansible.builtin.service:
    name: pandora-unoserver
    state: restarted
  become: yes
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

- name: Restart pandora-workers
  ansible.builtin.service:
    name: pandora-workers
    state: restarted
  become: yes
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

- name: Restart pandora-imap_fetcher
  ansible.builtin.service:
    name: pandora-imap_fetcher
    state: restarted
  become: yes
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

- name: Restart pandora-web
  ansible.builtin.service:
    name: pandora-web
    state: restarted
  become: yes
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

- name: Updating ClamAV Signatures  # noqa command-instead-of-module
  ansible.builtin.shell: systemctl stop clamav-freshclam.service; freshclam --quiet; systemctl start clamav-freshclam.service
  async: 600
  poll: 15
  become: yes
  become_user: root
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd")
        )

- name: Refresh apparmor libreoffice
  ansible.builtin.command: aa-enforce /etc/apparmor.d/usr.lib.libreoffice*
  become: yes
  become_user: root
