---

# - include: logging.yml

- name: install ufw
  package: name=ufw state=present
  register: pkg_result
  until: pkg_result is success

- name: ufw | RedHat | ensure enabled
  ufw: state=enabled
  when: ansible_os_family == 'RedHat'

- name: ufw | ensure logging medium is enabled
  ufw: logging={{ pandora_ufw_default_logging }}

- name: ufw | always allow ssh
  ufw:
    rule: allow
    name: "{{ ufw_rulename_ssh }}"
    log: yes

- name: ufw | allow access from defined networks
  ufw: rule=allow src={{ item }}
  with_items: "{{ pandora_ufw_access }}"

- name: ufw | allow access from defined networks - with logging
  ufw: rule=allow src={{ item }} log=yes
  with_items: "{{ pandora_ufw_access_with_log }}"

- name: ufw | allow incoming traffic for defined ports
  ufw:
    rule: allow
    interface: "{{ pandora_ufw_if }}"
    direction: in
    to_port: "{{ item }}"
  with_items: "{{ pandora_ufw_allow_ports_in }}"

- name: ufw | allow {{ pandora_ufw_if }} outgoing traffic for defined ports
  ufw:
    rule: allow
    interface: "{{ pandora_ufw_if }}"
    direction: out
    to_port: "{{ item }}"
    log: "{{ pandora_ufw_out_logging }}"
  with_items: "{{ pandora_ufw_allow_ports_out }}"

- name: ufw | allow all outgoing traffic for defined interfaces
  ufw: rule=allow interface={{ item }} direction=out
  with_items: "{{ pandora_ufw_allow_if_out }}"

- name: ufw | default policy
  ufw:
    state: enabled
    direction: "{{ item }}"
    policy: "{{ pandora_ufw_default_policy }}"
    log: yes
  with_items:
    - incoming
    - outgoing
