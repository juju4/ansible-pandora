---
- name: Converge
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"
  remote_user: root
  vars:
    # FIXME! try nonce instead of unsafe-inline
    hardenwebserver_header_csp: "default-src 'none'; script-src 'self' 'report-sample' 'unsafe-inline'; connect-src 'self'; img-src 'self' data: ; style-src 'self'; style-src-attr 'self' 'unsafe-inline'; base-uri 'none'; frame-ancestors 'none'; form-action 'self'; upgrade-insecure-requests; report-uri /csp/report.php;"
  pre_tasks:
    - name: Ubuntu | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: RedHat | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (yum install -y python3)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Gather Facts
      ansible.builtin.setup:
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: Ubuntu Bionic+, Redhat 8+ | Enforce python3 for ansible
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: >
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Debian | Update cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: "{{ pandora_apt_cache_valid_time | default('3600') }}"
      become: yes
      become_user: root
      when: ansible_os_family == 'Debian'
  roles:
    - geerlingguy.java
    - juju4.pandora
